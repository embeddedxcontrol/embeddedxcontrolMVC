@model embeddedxcontrol.Models.ProjectEditViewModel

@{
    ViewBag.Title = "CREATE AND EDIT PROJECT";
}


@*Load from Amazon Web Services*@
<script src="https://cdn.ckeditor.com/ckeditor5/1.0.0-alpha.2/classic/ckeditor.js"></script>
<div class="col-sm-10 col-sm-offset-1">
    <div class="col-sm-12" style="background-color:white; height:100%; padding-bottom:20px;">
        <h2 style="padding-top:12px;">@ViewBag.Title</h2>
        <hr style="border-color:gray; margin-top:0px;" />

        <form id="projectForm" novalidate action="@Url.Action("SaveProject", "Projects")" method="post">

            @Html.HiddenFor(p => p.DateCreated)

            <div class="form-group">
               @Html.LabelFor(p => p.Title)
                <div class="input-group">
                    @Html.TextBoxFor(p => p.Title, new {style = "width:500px; max-width:100%"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(p => p.DateCreated)
                :
                @Model.DateCreated
            </div>

            <div class="form-group">
                @Html.LabelFor(p => p.Topic)
                <div class="input-group">
                    @Html.TextBoxFor(p => p.Topic, new { style = "width:500px; max-width:100%" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(p => p.Summary)
                <div class="input-group" style="width:100%;">
                    @Html.TextAreaFor(p => p.Summary, new {style = "max-width:100% !important;", @class = "form-control", rows = 4 })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(p => p.Published)
                <div class="input-group">
                    <span>
                        <label>True</label>
                        @Html.RadioButtonFor(p => p.Published, true)
                    </span>
                    <span>
                        <label>False</label>
                        @Html.RadioButtonFor(p => p.Published, false)
                    </span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(p => p.FullText)
                <div class="input-group" style="width:100%;">

                    @*This is the textarea for drag and drop image functionality*@
                    @Html.TextAreaFor(p => p.FullText, new {style = "max-width:100% !important; height:500px;",@name = "content", @id = "editor" ,@class = "form-control", rows = 30} )
                    <script>
                        function encodeImageFileAsBase64Url(file) {
                            return new Promise(function (resolve) {
                                var reader = new FileReader();
                                reader.onloadend = function () {
                                    resolve(reader.result);
                                };

                                reader.readAsDataURL(file);
                            });
                        }

                        function Base64ImageAdapter(loader) {
                            this.loader = loader;
                        }

                        Base64ImageAdapter.prototype.upload = function () {
                            return encodeImageFileAsBase64Url(this.loader.file)
                                .then(function (base64src) {
                                    return {
                                        default: base64src
                                    };
                                });
                        };


                        Base64ImageAdapter.prototype.abort = function () {
                            // not needed
                        };

                        ClassicEditor
                            .create(document.querySelector('#editor'), {
                                image: {
                                    // You need to configure the image toolbar too, so it uses the new style buttons.
                                    toolbar: ['imageTextAlternative', '|', 'imageStyleAlignLeft', 'imageStyleFull', 'imageStyleAlignRight'],

                                    styles: [
                                        // This option is equal to a situation where no style is applied.
                                        'imageStyleFull',

                                        // This represents an image aligned to left.
                                        'imageStyleAlignLeft',

                                        // This represents an image aligned to right.
                                        'imageStyleAlignRight'
                                    ]
                                }
                            })
                            .then(editor => {
                                editor.plugins.get('FileRepository').createAdapter = function (loader) {
                                    return new Base64ImageAdapter(loader);
                                };
                            })
                            .catch(error => {
                                console.log('CKEditor initialization error', error);
                            });

                    </script>
                </div>
            </div>

            <div class="form-group">
                <input type="submit" formaction="@Url.Action("SaveProject")" formmethod="post" value="Save Project" class="btn btn-primary" />
            </div>
                


</form>

    </div>
</div>

